name: US FTC Robocall Daily Data Processing

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  process_data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: us
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pandas and phonenumbers
        run: pip install pandas phonenumbers

      - name: Download FTC data
        run: |
          year=$(date -d "yesterday" +%Y)
          month=$(date -d "yesterday" +%m)
          day=$(date -d "yesterday" +%d)
          wget --content-disposition -O ftc_data.csv "https://www.ftc.gov/sites/default/files/DNC_Complaint_Numbers_${year}-${month}-${day}.csv"

      - name: Process FTC data
        run: |
          python <<EOF
          import pandas as pd
          import re
          import phonenumbers

          try:
              df = pd.read_csv('ftc_data.csv', encoding='utf-8', on_bad_lines='skip')
          except pd.errors.EmptyDataError:
              print("Error: CSV file is empty. Exiting.")
              exit(1)
          except pd.errors.ParserError as e:
              print(f"Error parsing CSV: {e}")
              exit(1)
          
          df = df[['Company_Phone_Number']]
          df = df.rename(columns={'Company_Phone_Number': 'phoneNumber'})

          df['phoneNumber'] = df['phoneNumber'].astype(str).apply(lambda x: re.sub(r"\.0$", "", x))
          df['phoneNumber'] = df['phoneNumber'].str.replace('.', '', regex=False)
          df['phoneNumber'] = df['phoneNumber'].str.strip()

          def format_phone_number(number):
              try:
                  if number.startswith("+"):
                      parsed_number = phonenumbers.parse(number, None)
                      if phonenumbers.is_valid_number(parsed_number):
                          return phonenumbers.format_number(parsed_number, phonenumbers.PhoneNumberFormat.E164)
                  else:
                      parsed_number = phonenumbers.parse(number, "US")
                      if phonenumbers.is_valid_number(parsed_number):
                          return phonenumbers.format_number(parsed_number, phonenumbers.PhoneNumberFormat.NATIONAL)
              except phonenumbers.phonenumberutil.NumberParseException:
                  pass
              return number

          df['phoneNumber'] = df['phoneNumber'].apply(format_phone_number)
          df = df[df['phoneNumber'].notna() & (df['phoneNumber'] != '')]

          df['label'] = 'Robocall'
          df['name'] = ''
          df['avatar'] = ''
          df['isSubscribed'] = True
          df['count'] = ''
          df['url'] = ''
          df = df[['phoneNumber', 'label', 'name', 'avatar', 'isSubscribed', 'count', 'url']]
          df.to_csv('processed_ftc_data.csv', index=False)
          EOF

      - name: Commit and Push CSV
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update processed FTC data"
          file_pattern: "processed_ftc_data.csv"
          branch: us
          repository: .
          token: ${{ secrets.YOUR_GITHUB_TOKEN }}
